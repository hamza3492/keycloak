import Axios from 'axios';
import { Logger } from '@nestjs/common';
export class RequestManager {
    logger = new Logger(RequestManager.name);
    requester;
    client;
    constructor(client, baseURL) {
        this.client = client;
        this.requester = Axios.create({ baseURL });
        this.requester.interceptors.request.use(async (config) => {
            if (typeof config.headers?.authorization === 'string') {
                if (config.headers.authorization.length > 0) {
                    return config;
                }
            }
            try {
                const tokenSet = await this.client.refreshGrant();
                if (tokenSet?.access_token && config.headers) {
                    config.headers.authorization = `Bearer ${tokenSet?.access_token}`;
                }
            }
            catch (error) {
                this.logger.warn(`Could not refresh grant on interceptor.`, error);
            }
            return config;
        });
    }
    async get(...args) {
        return this.requester.get.apply(null, args);
    }
    async post(...args) {
        return this.requester.post.apply(null, args);
    }
    async put(...args) {
        return this.requester.put.apply(null, args);
    }
    async delete(...args) {
        return this.requester.delete.apply(null, args);
    }
}
//# sourceMappingURL=request-manager.js.map