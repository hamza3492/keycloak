import { RequestManager } from './request-manager';
export class ResourceManager {
    requestManager;
    constructor(client, endpoint) {
        this.requestManager = new RequestManager(client, endpoint);
    }
    async create(resource) {
        const { data } = await this.requestManager.post('/', resource.toJson());
        if (data._id) {
            resource.setId(data._id);
        }
        return resource;
    }
    async update(resource) {
        if (!resource.id)
            throw new Error(`Id is missing from resource`);
        await this.requestManager.put(`/${resource.id}`, resource.toJson());
        return resource;
    }
    async delete(resource) {
        await this.requestManager.delete(`/${resource.id}`);
    }
    async findById(id) {
        const { data } = await this.requestManager.get(`/${id}`);
        return data;
    }
    async findAll(params) {
        const { data } = await this.requestManager.get(`/`, {
            params,
        });
        return Promise.all(data.map((id) => this.findById(id)));
    }
    async findByAttribute(key, attribute) {
        const { data } = await this.requestManager.get(`/`, {
            [key]: attribute,
        });
        return data;
    }
}
//# sourceMappingURL=resource-manager.js.map