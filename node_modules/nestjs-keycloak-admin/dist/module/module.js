var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var KeycloakModule_1;
import { Module, Global } from '@nestjs/common';
import { KEYCLOAK_ADMIN_OPTIONS } from './constants';
import { KeycloakService } from './service';
let KeycloakModule = KeycloakModule_1 = class KeycloakModule {
    static register(options) {
        const provider = this.getOptionsProvider(options);
        return {
            module: KeycloakModule_1,
            providers: [provider, this.keycloakProvider],
            exports: [provider, this.keycloakProvider],
        };
    }
    static registerAsync(options) {
        const customOptions = this.getCustomOptions(options);
        return {
            module: KeycloakModule_1,
            imports: options.imports || [],
            providers: [customOptions, this.keycloakProvider],
            exports: [customOptions, this.keycloakProvider],
        };
    }
    static getCustomOptions(options) {
        return {
            provide: KEYCLOAK_ADMIN_OPTIONS,
            useFactory: options.useFactory,
            inject: options.inject || [],
        };
    }
    static keycloakProvider = {
        provide: KeycloakService,
        useFactory: async (options) => {
            const client = new KeycloakService(options);
            await client.initialize();
            return client;
        },
        inject: [KEYCLOAK_ADMIN_OPTIONS],
    };
    static getOptionsProvider(options) {
        return {
            provide: KEYCLOAK_ADMIN_OPTIONS,
            useValue: options,
        };
    }
};
KeycloakModule = KeycloakModule_1 = __decorate([
    Global(),
    Module({
        providers: [KeycloakService],
        exports: [KeycloakService],
    })
], KeycloakModule);
export { KeycloakModule };
//# sourceMappingURL=module.js.map