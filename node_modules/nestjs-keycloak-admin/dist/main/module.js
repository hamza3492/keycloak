"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var KeycloakModule_1;
Object.defineProperty(exports, "__esModule", { value: true });
exports.KeycloakModule = void 0;
const common_1 = require("@nestjs/common");
const constants_1 = require("./constants");
const service_1 = require("./service");
let KeycloakModule = KeycloakModule_1 = class KeycloakModule {
    static register(options) {
        const provider = this.getOptionsProvider(options);
        return {
            module: KeycloakModule_1,
            providers: [provider, this.keycloakProvider],
            exports: [provider, this.keycloakProvider],
        };
    }
    static registerAsync(options) {
        const customOptions = this.getCustomOptions(options);
        return {
            module: KeycloakModule_1,
            imports: options.imports || [],
            providers: [customOptions, this.keycloakProvider],
            exports: [customOptions, this.keycloakProvider],
        };
    }
    static getCustomOptions(options) {
        return {
            provide: constants_1.KEYCLOAK_ADMIN_OPTIONS,
            useFactory: options.useFactory,
            inject: options.inject || [],
        };
    }
    static getOptionsProvider(options) {
        return {
            provide: constants_1.KEYCLOAK_ADMIN_OPTIONS,
            useValue: options,
        };
    }
};
KeycloakModule.keycloakProvider = {
    provide: service_1.KeycloakService,
    useFactory: async (options) => {
        const client = new service_1.KeycloakService(options);
        await client.initialize();
        return client;
    },
    inject: [constants_1.KEYCLOAK_ADMIN_OPTIONS],
};
KeycloakModule = KeycloakModule_1 = __decorate([
    (0, common_1.Global)(),
    (0, common_1.Module)({
        providers: [service_1.KeycloakService],
        exports: [service_1.KeycloakService],
    })
], KeycloakModule);
exports.KeycloakModule = KeycloakModule;
//# sourceMappingURL=module.js.map